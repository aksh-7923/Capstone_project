{
	"name": "CarsDataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CarsLinkedService",
						"type": "DatasetReference"
					},
					"name": "Cars"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "Carsdb"
				},
				{
					"dataset": {
						"referenceName": "Parquet1",
						"type": "DatasetReference"
					},
					"name": "carsSinkAdls"
				}
			],
			"transformations": [
				{
					"name": "window1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          car_id as integer,",
				"          name as string,",
				"          km_driven as integer,",
				"          fuel as string,",
				"          transmission as string,",
				"          mileage as string,",
				"          engine as string,",
				"          max_power as string,",
				"          torque as string,",
				"          seats as integer,",
				"          model as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     partitionBy('hash', 1)) ~> Cars",
				"Cars window(over(car_id,",
				"          name,",
				"          fuel,",
				"          transmission,",
				"          mileage,",
				"          engine,",
				"          max_power,",
				"          torque,",
				"          model,",
				"          km_driven,",
				"          seats),",
				"     asc(car_id, true),",
				"     rank = rank()) ~> window1",
				"window1 filter(rank==1) ~> filter1",
				"filter1 select(mapColumn(",
				"          car_id,",
				"          name,",
				"          km_driven,",
				"          fuel,",
				"          transmission,",
				"          mileage,",
				"          engine,",
				"          max_power,",
				"          torque,",
				"          seats,",
				"          model",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> Carsdb",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> carsSinkAdls"
			]
		}
	}
}