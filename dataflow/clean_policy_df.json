{
	"name": "clean_policy_df",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "policy_dataset",
						"type": "DatasetReference"
					},
					"name": "policySrc"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "policy_parquet",
						"type": "DatasetReference"
					},
					"name": "policySinkADLS"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlDB_Dataset",
						"type": "DatasetReference"
					},
					"name": "policySinkSQLDB"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          policy_number as integer,",
				"          policy_bind_date as date,",
				"          policy_state as string,",
				"          policy_csl as string,",
				"          policy_deductable as integer,",
				"          policy_annual_premium as double,",
				"          umbrella_limit as integer,",
				"          car_id as integer,",
				"          customer_id as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> policySrc",
				"policySrc sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> policySinkADLS",
				"policySrc sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> policySinkSQLDB"
			]
		}
	}
}